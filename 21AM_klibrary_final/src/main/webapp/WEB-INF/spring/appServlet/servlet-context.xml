<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->	
	<annotation-driven />


	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.kh.klibrary" />
	
	<!--jsonView이용하기  -->
	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
	  <beans:property name="order" value="1"/>
	</beans:bean>
	<beans:bean id="jsonView" class="net.sf.json.spring.web.servlet.view.JsonView"/>
	
	<beans:bean class="com.fasterxml.jackson.databind.ObjectMapper"/>
	
	<!-- Jackson 등록 -->
		<beans:bean id="jacksonConverter"
	    class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
	    
	<!-- annotation -->    
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
	   <beans:property name="messageConverters">
	    <beans:list>
	      <beans:ref bean="jacksonConverter"/>
	    </beans:list>
	   </beans:property>
	</beans:bean>	
	
	  <interceptors>
	   	<interceptor>
	   		<mapping path="/searchpage/wishBookCheckInsert.do*"/>
	   		<beans:bean class="com.kh.klibrary.common.interceptor.LoginCheckInterceptor"/>
	   	</interceptor>	   			
		 <interceptor>
		   <mapping path="/searchpage/interestingbook*"/>
		   <beans:bean id="interestingbook" class="com.kh.klibrary.common.interceptor.LoginCheckInterceptor"/>		
		</interceptor>
		<interceptor>
		   <mapping path="/searchpage/bookReservation*"/>
		   <beans:bean id="bookReservation" class="com.kh.klibrary.common.interceptor.LoginCheckInterceptor"/>		
		</interceptor>
		<interceptor>
		   <mapping path="/member/memberBookMark.do*"/>
		   <beans:bean id="memberBookMark" class="com.kh.klibrary.common.interceptor.LoginCheckInterceptor"/>		
		</interceptor>	
		<interceptor>
		   <mapping path="/member/memberHopeBookRecord.do*"/>
		   <beans:bean id="memberHopeBookRecord" class="com.kh.klibrary.common.interceptor.LoginCheckInterceptor"/>		
		</interceptor>
		<interceptor>
		   <mapping path="/member/memberInfo.do*"/>
		   <beans:bean id="memberInfo" class="com.kh.klibrary.common.interceptor.LoginCheckInterceptor"/>		
		</interceptor>
		<interceptor>
		   <mapping path="/member/memberInfoUpdate.do*"/>
		   <beans:bean id="memberInfoUpdate" class="com.kh.klibrary.common.interceptor.LoginCheckInterceptor"/>		
		</interceptor>
		<interceptor>
		   <mapping path="/member/memberBorrowing.do*"/>
		   <beans:bean id="memberBorrowing" class="com.kh.klibrary.common.interceptor.LoginCheckInterceptor"/>		
		</interceptor>
		<interceptor>
		   <mapping path="/member/memberBorrowed.do*"/>
		   <beans:bean id="memberBorrowed" class="com.kh.klibrary.common.interceptor.LoginCheckInterceptor"/>		
		</interceptor>
		<interceptor>
		   <mapping path="/member/memberBooking.do*"/>
		   <beans:bean id="memberBooking" class="com.kh.klibrary.common.interceptor.LoginCheckInterceptor"/>		
		</interceptor>
		<interceptor>
		   <mapping path="/member/memberDelete.do*"/>
		   <beans:bean id="memberDelete" class="com.kh.klibrary.common.interceptor.LoginCheckInterceptor"/>		
		</interceptor>
		<interceptor>
		   <mapping path="/member/membershipCard.do*"/>
		   <beans:bean id="membershipCard" class="com.kh.klibrary.common.interceptor.LoginCheckInterceptor"/>		
		</interceptor>
					 
	</interceptors>
	
	
	<!-- hj 파일 업로드 사용 bean등록 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10485760"/>
	</beans:bean>
	<aop:aspectj-autoproxy/>
	
	<!--스케줄러  -->
	<task:scheduler id="gsScheduler" pool-size="10" />
	 <task:executor id="gsTaskExecutor" pool-size="10" />
	 <task:annotation-driven executor="gsTaskExecutor"
	  scheduler="gsScheduler" />
	  
</beans:beans>


